<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<parent>
		<groupId>com.tigerjoys.supersign</groupId>
		<artifactId>supersign</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>supersign-server</artifactId>
	<packaging>jar</packaging>

	<name>${project.artifactId}</name>
	<description>Super Sign Server Project</description>
	
	<properties>
		
	</properties>

	<dependencies>
	  	<dependency>
	    	<groupId>com.tigerjoys.supersign</groupId>
	        <artifactId>supersign-interface</artifactId>
	        <version>${project.parent.version}</version>
	    </dependency>
	  	<dependency>
	    	<groupId>com.tigerjoys.supersign</groupId>
	        <artifactId>supersign-common</artifactId>
	        <version>${project.parent.version}</version>
	    </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
		<dependency>
			<groupId>com.tigerjoys.nbs</groupId>
			<artifactId>nbs-api-mybatis-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.tigerjoys.nbs</groupId>
			<artifactId>nbs-api-web-common</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
		</dependency>
		<dependency>
	    	<groupId>ant-contrib</groupId>
	    	<artifactId>ant-contrib</artifactId>
	    </dependency>
        <dependency>
            <groupId>dom4j</groupId>
            <artifactId>dom4j</artifactId>
        </dependency>
		<!-- Tools Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.googlecode.jmockit</groupId>
			<artifactId>jmockit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymockclassextension</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
  
	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<!-- 指定jdk版本 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java_source_version}</source>
					<target>${java_source_version}</target>
					<encoding>${file_encoding}</encoding>
					<fork>true</fork>
					<meminitial>128m</meminitial>
					<maxmem>512m</maxmem>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<executable>true</executable>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>${file_encoding}</encoding>
					<useDefaultDelimiters>false</useDefaultDelimiters>
					<delimiters>
						<delimiter>$[*]</delimiter>
					</delimiters>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skip>${skip_maven_test}</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-antrun-plugin</artifactId>
	            <executions>
	                <execution>
	                    <phase>prepare-package</phase>
	                    <goals>
	                        <goal>run</goal>
	                    </goals>
	                    <configuration>
	                        <tasks>
	                        	<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="maven.runtime.classpath" />
	                        	<echo message="run package ${profiles.active} ..."/>
	                        	<if>
	                        		<equals arg1="${profiles.active}" arg2="dev"/>
	                        		<then>
	                        			<echo message="this is ${profiles.active} skip copy files ..."/>
	                        		</then>
	                        		<else>
	                        			<copy todir="${project.build.outputDirectory}" overwrite="true">
			                                <fileset dir="src/main/resources/${profiles.active}_conf"/>
			                           	</copy>
	                        		</else>
		                        </if>
	                        </tasks>
	                    </configuration>
	                </execution>
	            </executions>
	        </plugin>
		</plugins>
		<resources>
	  		<resource>
	  			<directory>src/main/resources</directory>
	  			<excludes>
	  				<exclude>application*.yml</exclude>
	  				<exclude>*.properties</exclude>
	  				<exclude>prod_conf/*</exclude>
	  				<exclude>dev_conf/*</exclude>
	  				<exclude>test_conf/*</exclude>
	  				<exclude>doc/*</exclude>
	  			</excludes>
	  		</resource>
	  		<resource>
	  			<directory>src/main/resources</directory>
	  			<filtering>true</filtering>
	  			<includes>
	  				<include>application-${profiles.active}.yml</include>
	  				<include>application.yml</include>
	  				<include>*.properties</include>
	  			</includes>
	  		</resource>
	  	</resources>
	</build>

	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<profiles.active>dev</profiles.active>
			</properties>
		</profile>

		<profile>
			<id>prod</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<profiles.active>prod</profiles.active>
			</properties>
		</profile>

		<profile>
			<id>test</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<profiles.active>test</profiles.active>
			</properties>
		</profile>
	</profiles>
  
</project>